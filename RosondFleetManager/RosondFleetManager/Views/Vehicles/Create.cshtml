@model RosondFleetManager.Models.Vehicle

@{
    ViewBag.Title = "Create Vehicle";
}

<h2 class="text-center bg-success text-white p-2">Create New Vehicle</h2>

@using (Html.BeginForm("Create", "Vehicles", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Make, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Model, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.VIN, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SupplierId", (SelectList)ViewBag.Suppliers, "-- Select Supplier --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Branch", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BranchId", (SelectList)ViewBag.Branches, "-- Select Branch --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Client", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClientId", (SelectList)ViewBag.Clients, "-- Select Client --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Existing Driver", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DriverId", (SelectList)ViewBag.Drivers, "-- Select Existing Driver --", new { @class = "form-control", id = "DriverDropdown" })
            <small class="form-text text-muted">Leave blank if adding a new driver below.</small>
            @Html.ValidationMessage("DriverId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("New Driver Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" name="NewDriverName" class="form-control" id="NewDriverInput" placeholder="Optional: Enter new driver name" />
            <span class="text-muted">If entered, overrides selected driver above.</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Create</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('#NewDriverInput').on('input', function () {
                if ($(this).val().trim()) {
                    $('#DriverDropdown').val('');
                }
            });
            $('#DriverDropdown').change(function () {
                if ($(this).val()) {
                    $('#NewDriverInput').val('');
                }
            });
        });
    </script>
}
